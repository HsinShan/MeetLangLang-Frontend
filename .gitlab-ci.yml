stages:
  - preparation
  - standard-test
  - deploy-prod

dev-standtest-preparation:
  stage: preparation
  tags:
    - sdm2021group3-dind
  image: node:10.17.0
  only:
    - /^feature\/.*$/
    - /^bugfix\/.*$/
    - /^test\/.*$/
    - merge_requests
  except:
    - web
  cache:
    key: "fe-$CI_COMMIT_REF_SLUG"
    paths:
      - app/node_modules/
      - node_modules/
    policy: pull-push
  script:
    - cd ./ && npm install --save-dev commitlint @commitlint/config-conventional
    - cd ./app && npm install

dev-commit-test:
  stage: standard-test
  tags:
    - sdm2021group3-dind
  image: node:10.17.0
  only:
    - /^feature\/.*$/
    - /^bugfix\/.*$/
    - /^test\/.*$/
    - merge_requests
  except:
    - web
  cache:
    key: "fe-$CI_COMMIT_REF_SLUG"
    paths:
      - node_modules/
    policy: pull
  script:
    - git fetch origin master
    - ./node_modules/.bin/commitlint --color --verbose --from=$(git rev-parse remotes/origin/master)

dev-style-test:
  stage: standard-test
  tags:
    - sdm2021group3-dind
  image: node:10.17.0
  only:
    - /^feature\/.*$/
    - /^bugfix\/.*$/
    - /^test\/.*$/
    - merge_requests
  except:
    - web
  cache:
    key: "fe-$CI_COMMIT_REF_SLUG"
    paths:
      - app/node_modules/
    policy: pull
  script:
    - cd ./app
    - npm run styletest

prod-deploy:
  variables:
    COMPOSE_CMD: 'VERSION=${CI_COMMIT_SHORT_SHA} REACT_APP_API_PORT=38181 docker-compose -f docker-compose.prod.yml'
  stage: deploy-prod
  tags:
    - sdm2021group3-prodssh
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web" && $DEPLOY_STAGE == "prod"'
  before_script:
    - pwd
    - 'eval ${COMPOSE_CMD} down -v'
    - docker images --filter=reference="mll-frontend/*" -q | xargs --no-run-if-empty docker rmi
  script:
    - pwd
    - 'eval ${COMPOSE_CMD} config'
    - 'eval ${COMPOSE_CMD} build --no-cache --force-rm'
    - 'eval ${COMPOSE_CMD} up -d'
    - sleep 30
    - 'eval ${COMPOSE_CMD} logs mll-frontend'
