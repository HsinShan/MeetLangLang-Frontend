stages:
  - preparation
  - standard-test
  - deploy-prod

dev-standtest-preparation:
  stage: preparation
  image: node:10.17.0
  tags:
    - sdm2021group3-docker
  only:
    - /^feature\/.*$/
    - /^bugfix\/.*$/
    - /^test\/.*$/
    - merge_requests
  cache:
    key: "fe-$CI_COMMIT_REF_SLUG"
    paths:
      - app/node_modules/
      - node_modules/
    policy: pull-push
  script:
    - cd ./ && npm install --save-dev commitlint @commitlint/config-conventional
    - cd ./app && npm install

dev-commit-test:
  stage: standard-test
  image: node:10.17.0
  tags:
    - sdm2021group3-docker
  only:
    - /^feature\/.*$/
    - /^bugfix\/.*$/
    - /^test\/.*$/
    - merge_requests
  cache:
    key: "fe-$CI_COMMIT_REF_SLUG"
    paths:
      - node_modules/
    policy: pull
  script:
    - git fetch origin master
    - ./node_modules/.bin/commitlint --color --verbose --from=$(git rev-parse remotes/origin/master)

dev-style-test:
  stage: standard-test
  image: node:10.17.0
  tags:
    - sdm2021group3-docker
  only:
    - /^feature\/.*$/
    - /^bugfix\/.*$/
    - /^test\/.*$/
    - merge_requests
  cache:
    key: "fe-$CI_COMMIT_REF_SLUG"
    paths:
      - app/node_modules/
    policy: pull
  script:
    - cd ./app
    - npm run styletest

prod-deploy:
  stage: deploy-prod
  tags:
    - sdm2021group3-prodssh
  only:
    - web
  before_script:
    - pwd
    - export REACT_APP_API_PORT=38181
    - docker-compose -f docker-compose.yml -f docker-compose.prod.yml down -v
  script:
    - pwd
    - mkdir -p app/node_modules/ app/node_modules/.cache/ app/build/
    - echo "prepare libs by dev settings"
    - docker-compose run --rm mll-frontend sh -c "npm install && npm run build"
    - docker-compose down -v
    - echo "start service"
    - docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
    - sleep 30
    - docker-compose -f docker-compose.yml -f docker-compose.prod.yml logs mll-frontend
